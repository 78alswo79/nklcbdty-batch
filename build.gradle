buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.nklcbdty.batch'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
    querydslAnnotationProcessor
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.5'
	implementation 'org.jsoup:jsoup:1.14.3' // Jsoup 크롤링 라이브러리
	implementation 'org.json:json:20240303'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.squareup.okhttp3:okhttp' // 최신 버전으로 변경할 수 있습니다
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    querydslAnnotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    querydslAnnotationProcessor "jakarta.persistence:jakarta.persistence-api"
    querydslAnnotationProcessor "jakarta.annotation:jakarta.annotation-api"
}

def generatedQuerydslDir = "$buildDir/generated/querydsl"

// JavaCompile task 설정
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.annotationProcessorPath = configurations.annotationProcessor + configurations.querydslAnnotationProcessor
    options.generatedSourceOutputDirectory.set(file(generatedQuerydslDir))
}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', generatedQuerydslDir]
        }
    }
}
clean {
    delete file(generatedQuerydslDir)
}
// MANIFEST.MF 설정
bootJar {
    manifest {
        attributes(
            'Manifest-Version': '1.0',
            'Main-Class': 'org.springframework.boot.loader.launch.JarLauncher', // 메인 클래스 설정
            'Start-Class': 'com.nklcbdty.batch.nklcbdty.batch.NklcbdtyBatchApplication', // 시작 클래스 설정
            'Spring-Boot-Version': '3.2.6' // 스프링 부트 버전 설정
        )
    }
}
